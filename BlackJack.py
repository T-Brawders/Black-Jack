{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "0018f4c6",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Would you like to play Black Jack? y\n",
      "['4S', 'KD']\n",
      "Player 1: 14\n",
      "Dealer as a:  JH\n",
      "Would you like another card? y\n",
      "Player 1: ['4S', 'KD', 'AS']\n",
      "Player 1: 25\n",
      "Dealer as a:  JH\n",
      "Bust!\n",
      "Dealer has  ['JH', '7S']\n",
      "Dealer Points:  17\n",
      "*************************************\n",
      "   Dealer wins! Please try again\n",
      "*************************************\n",
      "Would you like to play again?y\n",
      "---------------------------------------\n",
      "['5H', '10H']\n",
      "Player 1: 15\n",
      "Dealer as a:  9H\n",
      "Would you like another card? y\n",
      "Player 1: ['5H', '10H', '6D']\n",
      "Player 1: 21\n",
      "Dealer as a:  9H\n",
      "Black Jack!!!\n",
      "Dealer has  ['9H', 'JD']\n",
      "Dealer Points:  19\n",
      "*************************************\n",
      "    Player 1 wins! Well played!\n",
      "*************************************\n",
      "Would you like to play again?n\n",
      "---------------------------------------\n"
     ]
    }
   ],
   "source": [
    "import random\n",
    "Deck=[\"AD\",'KD','QD','JD','10D','9D','8D','7D','6D','5D','4D','3D','2D',\"AH\",'KH','QH','JH','10H','9H','8H','7H','6H','5H','4H','3H','2H',\"AC\",'KC','QC','JC','10C','9C','8C','7C','6C','5C','4C','3C','2C',\"AS\",'KS','QS','JS','10S','9S','8S','7S','6S','5S','4S','3S','2S']\n",
    "DeckVal={'AD':11,'KD':10,'QD':10,'JD':10,'10D':10,'9D':9,'8D':8,'7D':7,'6D':6,'5D':5,'4D':4,'3D':3,'2D':2,'AH':11,'KH':10,'QH':10,'JH':10,'10H':10,'9H':9,'8H':8,'7H':7,'6H':6,'5H':5,'4H':4,'3H':3,'2H':2,'AC':11,'KC':10,'QC':10,'JC':10,'10C':10,'9C':9,'8C':8,'7C':7,'6C':6,'5C':5,'4C':4,'3C':3,'2C':2,'AS':11,'KS':10,'QS':10,'JS':10,'10S':10,'9S':9,'8S':8,'7S':7,'6S':6,'5S':5,'4S':4,'3S':3,'2S':2}\n",
    "Shuffled_deck=list(Deck)\n",
    "player_1=[]\n",
    "P1_points=0\n",
    "player_2=[]\n",
    "dealer=[]\n",
    "dealer_points=0\n",
    "card_count=0\n",
    "def shuffle(s):\n",
    "    for i in range(s):\n",
    "        random.shuffle(Shuffled_deck)\n",
    "        return Shuffled_deck\n",
    "\n",
    "def Deal(p):\n",
    "    card_count=0\n",
    "    dealer_points=0\n",
    "    for i in range(p):\n",
    "            player_1.append(Shuffled_deck[card_count])\n",
    "            card_count=card_count+1\n",
    "            dealer.append(Shuffled_deck[card_count])\n",
    "            card_count=card_count+1\n",
    "    return card_count\n",
    "\n",
    "def P1_draw(a):\n",
    "    for i in range(a):\n",
    "        card_count=(len(dealer)+len(player_1)+len(player_2))\n",
    "        player_1.append(Shuffled_deck[card_count])\n",
    "def P2_draw(a):\n",
    "    for i in range(a):\n",
    "        card_count=(len(dealer)+len(player_1)+len(player_2))\n",
    "        player_2.append(Shuffled_deck[card_count])\n",
    "def dealer_draw(a):\n",
    "    for i in range(a):\n",
    "        card_count=(len(dealer)+len(player_1)+len(player_2))\n",
    "        dealer.append(Shuffled_deck[card_count])\n",
    "       \n",
    "        \n",
    "            \n",
    "shuffle(0)\n",
    "Deal(0)\n",
    "P1_draw(0)\n",
    "dealer_draw(0)\n",
    "for P in range(len(player_1)):\n",
    "    P1_points=P1_points+(DeckVal.get(player_1[P]))\n",
    "for Q in range(len(dealer)):\n",
    "    dealer_points=dealer_points+(DeckVal.get(dealer[Q]))\n",
    "\n",
    "#print('Player_1:',player_1,'Dealer:',dealer)\n",
    "#print('Player_1:',P1_points,'Dealer:',dealer_points)\n",
    "\n",
    "player_1.clear()\n",
    "player_2.clear()\n",
    "dealer.clear()\n",
    "contin=\"y\"\n",
    "play=input(\"Would you like to play Black Jack? \")\n",
    "while contin.lower()==\"y\" or play.lower()==\"yes\":\n",
    "    player_1.clear()\n",
    "    player_2.clear()\n",
    "    dealer.clear()\n",
    "    if play.lower()==\"y\" or play.lower()==\"yes\":\n",
    "        P1_points=0\n",
    "        P2_points=0\n",
    "        dealer_points=0\n",
    "        shuffle(1)\n",
    "        Deal(2)\n",
    "    else:\n",
    "        print(\"Too bad\")\n",
    "        contin=\"n\"        \n",
    "    print(player_1)\n",
    "    for P in range(len(player_1)):\n",
    "        P1_points=P1_points+(DeckVal.get(player_1[P]))\n",
    "    print(\"Player 1:\", P1_points)\n",
    "    print(\"Dealer as a: \",dealer[0])\n",
    "    drawup=input(\"Would you like another card? \")\n",
    "    while drawup==\"y\":\n",
    "        P1_draw(1)\n",
    "        P1_points=0\n",
    "        for P in range(len(player_1)):\n",
    "            P1_points=P1_points+(DeckVal.get(player_1[P]))\n",
    "        print(\"Player 1:\", player_1)\n",
    "        print(\"Player 1:\", P1_points)\n",
    "        print(\"Dealer as a: \", dealer[0])\n",
    "        if  P1_points==21:\n",
    "            print(\"Black Jack!!!\")\n",
    "            drawup=\"n\"\n",
    "            continue\n",
    "        elif P1_points<21:        \n",
    "            drawup=input(\"Would you like another card? \")\n",
    "        else:\n",
    "            print(\"Bust!\")\n",
    "            drawup=\"n\"\n",
    "    dealer_points=0\n",
    "    for Q in range(len(dealer)):\n",
    "        dealer_points=dealer_points+(DeckVal.get(dealer[Q]))\n",
    "    if P1_points<21:\n",
    "        while dealer_points<17:\n",
    "            dealer_draw(1)\n",
    "            dealer_points=0\n",
    "            for Q in range(len(dealer)):\n",
    "                dealer_points=dealer_points+(DeckVal.get(dealer[Q]))\n",
    "    print(\"Dealer has \",dealer)\n",
    "    print(\"Dealer Points: \",dealer_points)\n",
    "    if dealer_points>21:\n",
    "        print(\"Dealer Busts!\")\n",
    "    \n",
    "    if (dealer_points<P1_points and P1_points<=21) or dealer_points>21:\n",
    "        print(\"*************************************\")\n",
    "        print('    Player 1 wins! Well played!')\n",
    "        print(\"*************************************\")\n",
    "    else:\n",
    "        print(\"*************************************\")\n",
    "        print(\"   Dealer wins! Please try again\")\n",
    "        print(\"*************************************\")\n",
    "    contin=input(\"Would you like to play again? \")\n",
    "    print(\"---------------------------------------\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5eabb3e4",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "02ff730a",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
